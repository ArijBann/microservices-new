---
version: '3.7'
services:
  ## Postgres Docker Compose Config
  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_DB: order-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      PGDATA: /data/postgres
    volumes:
      - ./postgres-order:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: always

  postgres-payment:
    container_name: postgres-payment
    image: postgres
    environment:
      POSTGRES_DB: payment-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      PGDATA: /data/postgres
    volumes:
      - ./postgres-payment:/data/postgres
    ports:
      - "5432:5432"
    restart: always


  ## Eureka Server
  discovery-server:
    image: serviceregistry-dockerfile:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker


  api-gateway:
    image: apigateway-dockerfile:latest
    container_name: api-gateway
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery-server
  ## Payment-Service Docker Compose Config
  payment-service:
    container_name: payment-service
    image: paymentservice-dockerfile:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-payment:5432/payment-service
    depends_on:
      - postgres-payment
      - discovery-server
      - api-gateway
  ## Order-Service Docker Compose Config
  order-service:
    container_name: order-service
    image: orderservice-dockerfile:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5431/order-service
    depends_on:
      - postgres-order
      - discovery-server
      - api-gateway

  ## Prometheus
  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - payment-service
      - order-service

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password